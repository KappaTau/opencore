#!/bin/bash
#
#                  RavenCore Hosting Control Panel
#                Copyright (C) 2005  Corey Henderson
#
#     This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# This is a simple script used to take everything in the ravencore root and package
# it up into the release tarball, and then build the RPM for it, and then re-install
# ravencore

. /etc/ravencore.conf || exit 1

RAVENCORE_SRC=/usr/src/ravencore_src

BUILD_DIR=/var/tmp

RPM_SOURCES=/usr/src/redhat/SOURCES

v=0.3.2

if [ ! -d $RAVENCORE_SRC ] || [ ! -d $RC_ROOT ] || [ ! -d $BUILD_DIR ] || [ ! -d $RPM_SOURCES ]; then
    
    echo "You're missing a directory....exiting"
    
    exit 1
    
fi

# make sure the version is correct in the Makefile.in and ravencore.spec files

perl -pi -e "s/^VERSION=.*/VERSION=$v/" $RAVENCORE_SRC/Makefile.in 

perl -pi -e "s/^Version: .*/Version: $v/" $RAVENCORE_SRC/ravencore.spec


cd $RC_ROOT

cd ..

[ ! -d ravencore ] && echo "no directory $RC_ROOT ......" && exit 1

#

rm -rf $BUILD_DIR/ravencore-$v

mkdir -p $BUILD_DIR/ravencore-$v

cp -rp ravencore $BUILD_DIR/ravencore-$v/

#

cd $BUILD_DIR/ravencore-$v/ravencore

# before we remove stuff, save our MRTG data

mkdir -p /tmp/mrtg
mv -f /usr/local/ravencore/var/log/mrtg/* /tmp/mrtg

# remove files that are either generated by the make build or by ravencore itself

rm -rf chroot .shadow database.cfg var/{rc.sock,apps,db.sock,log,run,tmp} conf.d/local.conf tmp/* sbin/{wrapper,*.local} sbin/ravencore.httpd etc/{server_type.conf,vhosts.conf*,port*.conf,paths.*.local,docroot.conf,server.crt,server-id,server.key,version,logrotate.conf,httpd_modules} httpdocs/adodb

# kill the content_filter

echo "" > etc/postfix/main.cf/content_filter

# unset the postgrey

echo "permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination" > etc/postfix/main.cf/smtpd_recipient_restrictions

# look for files ending in .local

files=$(find . | grep '\.local$')

if [ -n "$files" ]; then

    echo "Found .local files in \$RC_ROOT"
    echo $files

    echo "exiting"
    exit 1

fi

# look for files ending in .ignore

files=$(find . | grep '\.ignore$')

if [ -n "$files" ]; then

    echo "Found .ignore files in \$RC_ROOT"
    echo $files

    echo "exiting"
    exit 1

fi

# make all of our conf.d files non-executable

chmod -x conf.d/*

cd ../

# make sure we're going to use our src directory

rm -rf ./src

cp -rp $RAVENCORE_SRC ./src

# make sure we're using our makefile

cp --reply=y ./src/Makefile.in ./Makefile

# move our license and install files into this directory

mv ravencore/{LICENSE,README.install,httpdocs/GPL} ./

# make ravencore directory into a tarball, and stick it in src

tar czp ravencore > ./src/ravencore.tar.gz

# get rid of the dir

rm -rf ./ravencore

# save what we got to our rpmbuild sources, this is the "tarball" release

cd ../

tar czp ravencore-$v > $RPM_SOURCES/ravencore-$v.tar.gz

# build an RPM out of ravencore

rpmbuild -ba $RAVENCORE_SRC/ravencore.spec

if [ $? -eq 0 ]; then

# make a copy of ravencore into /tmp

    rm -rf /tmp/ravencore

    cp -rp /usr/local/ravencore /tmp

# remove ravencore from the system

    rm -rf /usr/local/ravencore

    rpm -e ravencore

# install what we just built

    rpm -Uvh /usr/src/redhat/RPMS/noarch/ravencore-$v-1.noarch.rpm

# restart!!!

    #service ravencore restart
    /etc/init.d/ravencore restart

fi

# put our mrtg data back...

mkdir -p /usr/local/ravencore/var/log/mrtg/
mv -f /tmp/mrtg/* /usr/local/ravencore/var/log/mrtg/
