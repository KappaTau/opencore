#!/usr/bin/perl
#
#                  RavenCore Hosting Control Panel
#                Copyright (C) 2005  Corey Henderson
#
#     This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# first elementis the sender
$sender = shift(@ARGV);

# the rest are the recipients
@recipients = @ARGV;

# get the email source on standard input

@mail = <STDIN>;

# open up the clamdscan client, and quietly scan the message on the stream.

if(defined(open(CLAMD,'|-', '/usr/bin/clamdscan', '--quiet', '-'))) {

    print CLAMD @mail;

    close(CLAMD);

# clamdscan exits with 1 if it finds a virus, and logs what virus it was to /var/log/clamav/clamd.log

    if( ( $? / 256 ) == 1 ) {

# virus was found. Exit cleanly, so we won't cause the email to bounce, and we won't deliver the message

        exit(0);

    }

}

# figure out our path to sendmail... just look in two places. The .postfix has priority

if( -f "/usr/sbin/sendmail.postfix" ) { $sendmail = "/usr/sbin/sendmail.postfix"; }
elsif( -f "/usr/sbin/sendmail" ) { $sendmail = "/usr/sbin/sendmail"; }
else {

# can't find it

    die "Fatal error: unable to find sendmail binary";

}

# we get what our next action is from the postfix master.cf file ( run spamc ), do it here.

if( -d "/var/spool/virtual/$domain/$user" ) {

# only open up per-user spamassassin settings if the user exists, otherwise we'd have a directory in 
# our VMAIL_ROOT for each remote email address we have ever redirected mail to

    open(SPAMC,"|/usr/bin/spamc -u $recipient -f -e $sendmail -oi -f $sender $recipient");

} else {

# use normal server default spam settings on email redirects

    #open(SPAMC,"|/usr/bin/spamc -f -e /usr/sbin/sendmail -oi -f $sender $recipient");
    open(SPAMC,"|$sendmail -oi -f $sender $recipient");

}

print SPAMC @mail;

