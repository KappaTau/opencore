#!/bin/bash
#
#                  RavenCore Hosting Control Panel
#                Copyright (C) 2005  Corey Henderson
#
#     This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# this is the %post script for ravencore rpm

export GOT_CONF=1

. /etc/ravencore.conf || exit 1

# define some of our connect variables
    
CONNECT=0
REMOTE=0

# legacy connection file
MYSQL_CFG="$RC_ROOT/database.cfg"

# bash commands
_echo=echo
_sleep=sleep
_mysql=mysql
_pidof=pidof
_sed=sed
_awk=awk
_ls=ls
_grep=grep
_cat=cat
_diff=diff
_mysqldump=mysqldump
_rm=rm
_chmod=chmod
_chown=chown
_head=head
_basename=basename
_touch=touch
_sqlite3=sqlite3

#
INITD=/etc/init.d

# by default, do no overwrite it if it's already there
if [ -f $RC_ROOT/var/ravencore.sqlite ]; then
	$_echo "The ravencore sqlite database already exists. If you want to re-initialize it, please remove it: $RC_ROOT/var/ravencore.sqlite"
	exit 0
fi

# load the schema
cat $RC_ROOT/etc/sql_tables/*.sql | $_sqlite3 $RC_ROOT/var/ravencore.sqlite

# if MYSQL_CFG exists, source it and attempt to dump info out of mysql into sqlite
if [ -f $MYSQL_CFG ]; then

	$_echo "Found legacy MySQL database.cfg file, attempting to convert data into new sqlite database"

	# look for MYSQL_ADMIN_PASS, checking the .save file first
	if [ -f $RC_ROOT/.shadow.save ]; then
		MYSQL_ADMIN_PASS=$(cat $RC_ROOT/.shadow.save)
	elif [ -f $RC_ROOT/.shadow ]; then
		MYSQL_ADMIN_PASS=$(cat $RC_ROOT/.shadow)
	else
		$_echo "Unable to find mysql password file, should be $RC_ROOT/.shadow"
		exit 1
	fi

	# load the database.cfg file. This will override the MYSQL_ADMIN_* stuff if it succeeds
	source $MYSQL_CFG

	if [ $? -ne 0 ]; then
		$_echo "Failed to source $MYSQL_CFG"
		exit 1
	fi

	if [ -z "$MYSQL_ADMIN_HOST" ] || [ -z "$MYSQL_ADMIN_PORT" ] || [ -z "$MYSQL_ADMIN_USER" ] || [ -z "$MYSQL_ADMIN_DB" ]; then
		$_echo "Something is missing from $MYSQL_CFG"
		exit 1
	fi

	# find the real name of the service script to start mysqld
	mysql_service=$($_basename $($_ls /etc/init.d/mysql* | $_head -n1))

	$_echo "Attempting to gain access to mysqld and dump the ravencore database"
	$_sleep 1

	# if MYSQL_ADMIN_HOST is localhost, start mysqld if it isn't running
	if [ "$MYSQL_ADMIN_HOST" = "localhost" ] || [ "$MYSQL_ADMIN_HOST" = "127.0.0.1" ]; then

		if [ -z "$($_pidof mysqld)" ]; then

			$_echo "mysqld not running, attemping to start...."

			if [ -f $INITD/$mysql_service ]; then
				$INITD/$mysql_service start
			else
				$_echo "Unable to find the mysql init script in $INITD. Please start the mysql server manually and try again."
				exit 1
			fi

		fi

	else
		$_echo "mysql host is not localhost or 127.0.0.1, treating it as a remote server; $MYSQL_ADMIN_HOST"
		REMOTE=1
	fi

	$_echo -n "Attempting to connect to mysql server...."

	# attempt DB connection
	$_mysql -h $MYSQL_ADMIN_HOST -P$MYSQL_ADMIN_PORT -u $MYSQL_ADMIN_USER -p$MYSQL_ADMIN_PASS -e "" 2> /dev/null

	if [ $? -eq 0 ]; then
		# success
		CONNECT=1
		$_echo "ok"
	else
		# failure
		CONNECT=0
		$_echo "failed"

		$_echo "Unable to connect to the mysql database. Please correct this and try again."
	fi

	# dump data from mysql and pipe it into sqlite
	$_mysqldump -h $MYSQL_ADMIN_HOST -P$MYSQL_ADMIN_PORT -u $MYSQL_ADMIN_USER -p$MYSQL_ADMIN_PASS --skip-opt -c -t $MYSQL_ADMIN_DB \
		| grep '^INSERT' \
		| $_sqlite3 $RC_ROOT/var/ravencore.sqlite

	# if success, we're done; remove the mysql stuff
	if [ $? -eq 0 ]; then
		rm -f $RC_ROOT/.shadow.save $MYSQL_CFG
	else
		$_echo "Something went wrong with the mysqldump, exiting"
		exit 1
	fi

	$_echo "Success!!"

fi

# tell us that we ran the db_install script
$_touch $RC_ROOT/var/run/db_install

exit 0

